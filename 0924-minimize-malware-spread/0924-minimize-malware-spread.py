class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        row, col = len(graph), len(graph[0])
        colors = {}

        def dfs(node, color):
            colors[node] = color
            for nbr, conn in enumerate(graph[node]):
                if conn and nbr not in colors:
                    dfs(nbr,color)
        c = 0
        for node in range(row):
            if node not in colors:
                dfs(node,c)
                c += 1
        
        size = Counter(colors.values())
        color_count = {}
        for n in initial:
            color_count[colors[n]] = color_count.get(colors[n],0) + 1
        
        # iterate only for unique colors
        ans = float("inf")
        for node in initial:
            c = colors[node]
            if color_count[c] == 1:
                if ans == float("inf"):
                    ans = node
                elif size[c] > size[colors[ans]]:
                    ans = node
                elif size[c] == size[colors[ans]] and node < ans:
                    ans = node
        return ans if ans != float("inf") else min(initial)




                
        